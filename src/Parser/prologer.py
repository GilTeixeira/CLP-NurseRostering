

class Prologer:
    def __init__(self, hospital):
        self.hospital=hospital
        self.prologCode = ""
    
    def generatePrologFile(self, output):
        prologFile = open(output, 'w', encoding="utf-8")
        self.convertToProlog()
        prologFile.write(self.prologCode)
        prologFile.close()

    def convertToProlog(self):
        self.prologCode = ("%% Autogenerated data file from text file: '%s'\n" % "TODO")
        self.convertNumberOfDays()  
        self.convertShifts()
        self.convertStaff()
        self.convertDaysOff()
        self.convertShiftOnRequests()
        self.convertShiftOffRequests()
        self.convertCover()
    

    def convertNumberOfDays(self):
        self.prologCode += '\n'
        self.prologCode += "numberOfDays(%d)." %  self.hospital.numberOfDays
        self.prologCode += '\n'
    
    def convertShifts(self):
        self.prologCode += '\n'
        for shift in self.hospital.shifts:
            self.prologCode += "shift(\'%s\',%d,%s).\n" % (shift.shiftID,shift.duration,str(shift.shiftsIDCantFollow))
        #self.prologCode += "numberOfDays(%d)." %  self.hospital.numberOfDays
        self.prologCode += '\n'

 #nurseID, maxShifts,
    #maxTotalMinutes, minTotalMinutes, maxConsecutiveShifts, 
    #minConsecutiveShifts, minConsecutiveDaysOff, maxWeekends
    def convertStaff(self):
        self.prologCode += '\n'
        for nurse in self.hospital.nurses:
            self.prologCode += "nurse(\'%s\',%s,%d,%d,%d,%d,%d,%d).\n" % (nurse.nurseID, str(nurse.maxShifts),
                nurse.maxTotalMinutes, nurse.minTotalMinutes, nurse.maxConsecutiveShifts, 
                nurse.minConsecutiveShifts, nurse.minConsecutiveDaysOff, nurse.maxWeekends)
        #self.prologCode += "numberOfDays(%d)." %  self.hospital.numberOfDays
        self.prologCode += '\n'
    
    def convertDaysOff(self):
        self.prologCode += "\n"
        for nurse in self.hospital.nurses:
            self.prologCode += "daysOff(\'%s\',%s).\n" % (nurse.nurseID,str(nurse.daysOff))
        self.prologCode += "\n"

    def convertShiftOnRequests(self):
        self.prologCode += "\n"
        for nurse in self.hospital.nurses:
            for request in nurse.shiftOnRequests:
                self.prologCode += "shiftOnRequest(\'%s\',%d,\'%s\',%d).\n" % (nurse.nurseID,request.day,request.shiftID,request.weight)
        self.prologCode += "\n"
    
    # day, shiftID, weight, OnRequest
    def convertShiftOffRequests(self):
        self.prologCode += "\n"
        for nurse in self.hospital.nurses:
            for request in nurse.shiftOffRequests:
                self.prologCode += "shiftOffRequest(\'%s\',%d,\'%s\',%d).\n" % (nurse.nurseID,request.day,request.shiftID,request.weight)
        self.prologCode += "\n"
    
    #day, shiftID, required, weightUnder, weightOver
    def convertCover(self):
        self.prologCode += "\n"
        for cover in self.hospital.covers:
            self.prologCode += "cover(%d,\'%s\',%d,%d,%d).\n" % (cover.day, cover.shiftID, cover.required, cover.weightUnder, cover.weightOver)
        self.prologCode += "\n"

